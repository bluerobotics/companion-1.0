paths:
  /camera/list/:
    get:
      tags:
        - camera
      summary: list all video devices, including unsupported devices
  /camera/list/supported:
    get:
      tags:
        - camera
      summary: list supported camera devices
      description: list v4l2 devices that are cameras supporting video capture. This should be used to present camera selection UI to user in video configuration
      responses:
        200:
          description: success, a list of the supported cameras, and their attributes
          content:
            application/json:
              properties:
                cameras:
                  type: array
                  items:
                    type: object
                    schema:
                      $ref: "#/components/schemas/cameraInformation"
  /camera/{id}/formats:
    get:
      tags:
        - camera
      summary: get a list of supported formats for a camera
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cameraFormats"
        500:
          description: error
  /camera/{id}/format:
    get:
      tags:
        - camera
      summary: get the current camera format
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cameraFormat"
      schemes: http
    put:
      tags:
        - camera
      summary: set the camera format
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cameraFormat"
  /camera/{id}/controls:
    get:
      tags:
        - camera
      summary: get camera available controls, and their current values
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cameraControls"
        500:
          description: error
  /camera/{id}/control/{control}:
    get:
      tags:
        - camera
      summary: get a camera control
      produces:
        - application/vnd.cameraControl+json
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cameraControl"
    put:
      tags:
        - camera
      summary: set a camera control
      operationId: 
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cameraControl"
        500:
          description: Error setting control
          content:
            application/json:
              properties:
                error:
                  type: string
                  description: error message
                  example: out of range, invalid control

components:
  schemas:
    deviceInformation:
      description: see https://linuxtv.org/downloads/v4l-dvb-apis/userspace-api/v4l/vidioc-querycap.html and struct v4l2_capability
      type: object
      properties:
        driver:
          type: string
          example: uvcvideo
        description:
          type: string
          example: HD Pro Webcam C920
        busInfo:
          type: string
          example: usb-0000:34:00.3-3.1.4
        version:
          type: string
          example: 5.7.9
        capabilities:
          type: integer
          example: 4096
        deviceCapabilities:
          type: integer
          example: 4096
        path:
          type: string
          example: /dev/video0
    pixelFormat:
      type: object
      properties:
        format:
          type: integer
          example: 0
        fourcc:
          type: string
          example: 'H264'
    formatDescription:
      description: see https://linuxtv.org/downloads/v4l-dvb-apis/userspace-api/v4l/vidioc-enum-fmt.html and struct v4l2_fmtdesc
      type: object
      properties:
        index:
          type: integer
          example: 0
        type:
          type: integer
          example: 1
        flags:
          type: integer
          example: 1
        description:
          type: string
          example: 'YUV 4:2:2'
        pixelFormat:
          $ref: "#/components/schemas/pixelFormat"
    frameSizeDiscrete:
      type: object
      properties:
        width:
          type: integer
          example: 1920
        height:
          type: integer
          example: 1080
    frameSizeStepwise:
      type: object
      properties:
        minWidth:
          type: integer
          example: 32
        maxWidth:
          type: integer
          example: 1920
        stepWidth:
          type: integer
          example: 1
        minHeight:
          type: integer
          example: 32
        maxHeight:
          type: integer
          example: 1080
        stepHeight:
          type: integer
          example: 1
    frameSizeEnum:
      description: see https://linuxtv.org/downloads/v4l-dvb-apis/userspace-api/v4l/vidioc-enum-framesizes.html and struct v4l2_frmsizeenum
      type: object
      properties:
        index:
          type: integer
          example: 0
        pixelFormat:
          $ref: "#/components/schemas/pixelFormat"
        type:
          description: see enum v4l2_frmsizetypes
          type: integer
          example: 0
        frameSize:
          type: object
          oneOf:
            - $ref: "#/components/schemas/frameSizeDiscrete"
            - $ref: "#/components/schemas/frameSizeStepwise"
    frameIntervalDiscrete:
      type: object
      properties:
        numerator:
          type: integer
          example: 1
        denominator:
          type: integer
          example: 30
    frameIntervalStepwise:
      type: object
      properties:
        min:
          type: integer
          example: 1
        max:
          type: integer
          example: 30
        step:
          type: integer
          example: 1
    frameIntervalEnum:
      description: see https://linuxtv.org/downloads/v4l-dvb-apis/userspace-api/v4l/vidioc-enum-frameintervals.html and struct v4l2_frmivalenum
      properties:
        index:
          type: integer
          example: 0
        pixelFormat:
          $ref: "#/components/schemas/pixelFormat"
        width:
          type: integer
          example: 1920
        height:
          type: integer
          example: 1080
        type:
          description: see v4l2_frmivaltypes
          type: integer
          example: 0
        frameInterval:
          type: object
          oneOf:
            - $ref: "#/components/schemas/frameIntervalDiscrete"
            - $ref: "#/components/schemas/frameIntervalStepwise"
    cameraFormat:
      description: a specific camera format specifying encoding (pixformat), frame size, and frame interval
      type: object
      properties:
        pixelFormat:
          $ref: "#/components/schemas/pixelFormat"
        frameSize:
          $ref: "#/components/schemas/frameSizeDiscrete"
        frameInterval:
          $ref: "#/components/schemas/frameIntervalDiscrete"
    cameraControl:
      type: object
      properties:
        index:
          type: integer
        id:
          type: integer
        value:
          type: integer
        default:
          type: integer
        min:
          type: integer
        max:
          type: integer
        type:
          type: integer
        menu:
          type: object
    cameraControls:
      type: array
      items:
        $ref: "#/components/schemas/cameraControl"
